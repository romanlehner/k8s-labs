apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-client
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-client
  namespace: default 
  labels:
    app: vault-client 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-client
  template:
    metadata:
      labels:
        app: vault-client
    spec:
      serviceAccountName: vault-client
      volumes:
      - configMap:
          name: vault-agent-config
          items:
          - key: vault-agent-config.hcl
            path: vault-agent-config.hcl
        name: config
      - emptyDir: {}
        name: shared-data
      initContainers:
      - args:
        - agent
        - -config=/etc/vault/vault-agent-config.hcl
        - -log-level=debug
        image: vault:1.13.1
        name: vault-agent
        volumeMounts:
        - mountPath: /etc/vault
          name: config
        - mountPath: /etc/secrets
          name: shared-data
      
      containers:
      - name: vault-client
        image: nginx:latest
        # command: ['/bin/sh', '-c', '--']
        # args: ['while true; do sleep 30; done;']
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: shared-data
      
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-agent-config
  namespace: default
data:
  vault-agent-config.hcl: |
    # Comment this out if running as sidecar instead of initContainer
    exit_after_auth = true

    pid_file = "/home/vault/pidfile"

    vault {
      address = "http://vault.vault:8200"
      retry {
        num_retries = 5
      }
    }

    auto_auth {
        method "kubernetes" {
            mount_path = "auth/vault-client"
            config = {
                role = "vault-client"
            }
        }

        sink "file" {
            config = {
                path = "/home/vault/.vault-token"
            }
        }
    }

    template {
    destination = "/etc/secrets/index.html"
    contents = <<EOT
    <html>
    <body>
    <p>Some secrets:</p>
    {{- with secret "static/data/db?version=1" }}
    <ul>
    <li><pre>username: {{ .Data.data.user }}</pre></li>
    <li><pre>password: {{ .Data.data.pass }}</pre></li>
    </ul>
    {{ end }}
    </body>
    </html>
    EOT
    }
---
apiVersion: org.com/v1alpha1
kind: XKubernetesVaultAuth
metadata:
  name: vault-client
spec:
  kubernetesHost: https://argo-control-plane:6443
---
apiVersion: org.com/v1alpha1
kind: KubernetesVaultAuthRole
metadata:
  name: vault-client
spec:
  backend: vault-client
  boundServiceAccountNames: 
  - vault-client
  boundServiceAccountNamespaces: 
  - default
  roleName: vault-client
  tokenPolicies: 
  - db_access
---